template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_PS_GoPublishBinary_0013_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_PowerShell.path }}
      branches:
        include: {{gitBranch}}

  - name: S_PS_GoPublishBinary_0013_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory

pipelines:
  - name: pipeline_S_PS_GoPublishBinary_0013
    configuration:
      nodePool: win_2019
    steps:
      - name: S_PS_GoPublishBinary_0013_1
        type: GoBuild
        configuration:
          environmentVariables:
            JFROG_CLI_BUILD_NAME: S_PS_GoPublishBinary_0013_buildName
            JFROG_CLI_BUILD_NUMBER: ${run_id}
          inputResources:
            - name: S_PS_GoPublishBinary_0013_GitRepo
          integrations:
            - name: s_artifactory
          sourceLocation: "tests/Go/HelloWorld"
          resolverRepo: test-automation-go-virtual
      - name: S_PS_GoPublishBinary_0013_2
        type: GoPublishBinary
        configuration:
          environmentVariables:
            auto_publish: "false"
          inputSteps:
            - name: S_PS_GoPublishBinary_0013_1
          outputResources:
            - name: S_PS_GoPublishBinary_0013_BuildInfo
          targetRepository: test-automation-go-local
          autoPublishBuildInfo: "${auto_publish}"
      - name: S_PS_GoPublishBinary_0013_3
        type: PowerShell
        configuration:
          inputSteps:
            - name: S_PS_GoPublishBinary_0013_2
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - jfrog rt curl -XGET /api/build/${JFROG_CLI_BUILD_NAME}/${JFROG_CLI_BUILD_NUMBER} -o ${step_tmp_dir}/response
            - |
              $buildInfo = (Get-Content "${step_tmp_dir}\response" | ConvertFrom-JSON).buildInfo
              if ( $buildInfo ) { throw "Build info found" }
